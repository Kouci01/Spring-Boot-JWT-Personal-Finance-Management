<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.finance.management.mapper.TransactionMapper">
    <insert id="insertTransaction" parameterType="com.finance.management.model.Transaction">
        INSERT INTO transactions (amount, description, user_id, category_id, date)
        VALUES
        <foreach collection="transaction" item="tr" separator=",">
            (#{tr.amount}, #{tr.description}, #{tr.userId} ,#{tr.categoryId}, CURDATE())
        </foreach>
    </insert>
    <update id="updateTransaction" parameterType="com.finance.management.model.Transaction">
        UPDATE transactions
        SET
            amount = #{amount}
            <if test="description!=null and ''!=description">
                ,description = #{description}
            </if>
            <if test="categoryId!=null and ''!=categoryId">
                ,category_id = #{categoryId}
            </if>
        WHERE id = #{id}
    </update>
    <select id="getTransactions" parameterType="com.finance.management.model.Transaction" resultType="com.finance.management.model.Transaction">
        SELECT t.*, c.name as category_name FROM transactions t
        JOIN categories c ON t.category_id = c.id
        <where>
            <if test="categoryId!=null and ''!=categoryId">
                and t.category_id = #{categoryId}
            </if>
            <if test="amount!=null and ''!=amount">
                and t.amount >= #{amount}
            </if>
            <if test="description!=null and ''!=description">
                <bind name="descriptionLike" value="'%' + description + '%'"/>
                and t.description like #{descriptionLike}
            </if>
            <if test="categoryName!=null and ''!=categoryName">
                and c.name = #{categoryName}
            </if>
            <if test="userId!=null and ''!=userId">
                and t.user_id = #{userId}
            </if>
        </where>
    </select>

    <select id="incomeExpenseSummary" parameterType="com.finance.management.model.Transaction" resultType="com.finance.management.model.Summary">
        SELECT
            c.name AS categoryName,
            COALESCE(SUM(t.amount), 0) AS total
        FROM categories c
        LEFT JOIN transactions t ON
            c.id = t.category_id AND t.user_id = #{userId} AND t.date BETWEEN #{startDate} AND #{endDate}
        GROUP BY
            c.name
    </select>

    <select id="yearlyTrends" parameterType="com.finance.management.model.Transaction" resultType="com.finance.management.model.Summary">
        SELECT income.year, income.month,(income.total - expense.total) as total
        FROM (
                 SELECT YEAR(t.date) AS year, MONTH(t.date) AS month, SUM(t.amount) AS total
                 FROM transactions t
                     JOIN categories c ON c.id = t.category_id
                 WHERE user_id = #{userId} and c.name = 'Income'
                 GROUP BY YEAR(t.date), MONTH(t.date)
                 ORDER BY year, month ) as income
                 JOIN
             (SELECT YEAR(t.date) AS year, MONTH(t.date) AS month, SUM(t.amount) AS total
              FROM transactions t
                  JOIN categories c ON c.id = t.category_id
              WHERE user_id = #{userId} and c.name != 'Income'
              GROUP BY YEAR(t.date), MONTH(t.date)
              ORDER BY year, month) as expense ON income.year = expense.year AND income.month = expense.month
    </select>
</mapper>